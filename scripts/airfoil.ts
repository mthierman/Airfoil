import Color from "colorjs.io";
import { mkdir, writeFile } from "node:fs/promises";
import { resolve } from "node:path";
import resolveConfig from "tailwindcss/resolveConfig.js";
import type { DefaultColors } from "tailwindcss/types/generated/colors.js";
import manifest from "../package.json" with { type: "json" };
import tailwindConfig from "../tailwind.config.js";

type Mode = "Dark" | "Light";

type Scale = 50 | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | 950;

type Tone = "Slate" | "Gray" | "Zinc" | "Neutral" | "Stone";

type Accent =
    | "Red"
    | "Orange"
    | "Amber"
    | "Yellow"
    | "Lime"
    | "Green"
    | "Emerald"
    | "Teal"
    | "Cyan"
    | "Sky"
    | "Blue"
    | "Indigo"
    | "Violet"
    | "Purple"
    | "Fuchsia"
    | "Pink"
    | "Rose";

interface Theme {
    name: string;
    filename: string;
    mode: Mode;
    keys: {
        accent: keyof DefaultColors;
        tone: keyof DefaultColors;
    };
    accent: string;
    background: string;
    background2: string;
    border: string;
    comment: string;
    dim: string;
    error: string;
    focus: string;
    foreground: string;
    hover: string;
    scale: Scale;
    shadow: string;
    success: string;
    test: string;
    transparent: string;
    warning: string;
    tailwind: DefaultColors;
    terminal: {
        black: string;
        blue: string;
        brightBlack: string;
        brightBlue: string;
        brightCyan: string;
        brightGreen: string;
        brightMagenta: string;
        brightRed: string;
        brightWhite: string;
        brightYellow: string;
        cyan: string;
        green: string;
        magenta: string;
        red: string;
        white: string;
        yellow: string;
    };
}

type ThemeManifest = {
    label: string;
    mode: Mode;
    tone: Tone;
    accent: Accent;
    uiTheme: "vs-dark" | "vs";
    path: string;
};

const generateTerminal = (theme: Theme) => {
    return {
        background: theme.background.toUpperCase(),
        black: theme.terminal.black.toUpperCase(),
        blue: theme.terminal.blue.toUpperCase(),
        brightBlack: theme.terminal.brightBlack.toUpperCase(),
        brightBlue: theme.terminal.brightBlue.toUpperCase(),
        brightCyan: theme.terminal.brightCyan.toUpperCase(),
        brightGreen: theme.terminal.brightGreen.toUpperCase(),
        brightPurple: theme.terminal.brightMagenta.toUpperCase(),
        brightRed: theme.terminal.brightRed.toUpperCase(),
        brightWhite: theme.terminal.brightWhite.toUpperCase(),
        brightYellow: theme.terminal.brightYellow.toUpperCase(),
        cursorColor: theme.accent.toUpperCase(),
        cyan: theme.terminal.cyan.toUpperCase(),
        foreground: theme.foreground.toUpperCase(),
        green: theme.terminal.green.toUpperCase(),
        name: theme.name,
        purple: theme.terminal.magenta.toUpperCase(),
        red: theme.terminal.red.toUpperCase(),
        selectionBackground: theme.accent.toUpperCase(),
        white: theme.terminal.white.toUpperCase(),
        yellow: theme.terminal.yellow.toUpperCase(),
    };
};

const makeTheme = (theme: ThemeManifest): Theme => {
    const tailwind = resolveConfig(tailwindConfig).theme.colors;
    const isDark = theme.mode === "Dark";
    const terminalScale = isDark ? 500 : 700;
    const terminalBrightScale = isDark ? 400 : 600;
    const scale = isDark ? 300 : 700;

    return {
        name: theme.label,
        filename: `airfoil-${theme.mode.toLowerCase()}-${theme.tone.toLowerCase()}-${theme.accent.toLowerCase()}-color-theme.json`,
        mode: theme.mode,
        keys: {
            accent: theme.accent.toLowerCase() as keyof DefaultColors,
            tone: theme.tone.toLowerCase() as keyof DefaultColors,
        },
        accent: isDark
            ? `${tailwind[theme.accent.toLowerCase() as keyof DefaultColors][400]}`
            : `${tailwind[theme.accent.toLowerCase() as keyof DefaultColors][600]}`,
        background: `${tailwind[theme.tone.toLowerCase() as keyof DefaultColors][isDark ? 900 : 100]}`,
        background2: `${tailwind[theme.tone.toLowerCase() as keyof DefaultColors][isDark ? 800 : 200]}`,
        border: `${tailwind[theme.tone.toLowerCase() as keyof DefaultColors][isDark ? 700 : 300]}`,
        comment: tailwind.red[isDark ? 400 : 700],
        dim: `${tailwind[theme.tone.toLowerCase() as keyof DefaultColors][500]}`,
        error: tailwind.red[scale],
        focus: `${tailwind[theme.accent.toLowerCase() as keyof DefaultColors][isDark ? 800 : 300]}4D`,
        foreground: `${tailwind[theme.tone.toLowerCase() as keyof DefaultColors][isDark ? 300 : 700]}`,
        hover: `${tailwind[theme.accent.toLowerCase() as keyof DefaultColors][isDark ? 800 : 300]}33`,
        scale: scale,
        shadow: "#00000033",
        success: tailwind.green[scale],
        test: tailwind.pink[scale],
        transparent: isDark ? "#00000000" : "#FFFFFF00",
        warning: tailwind.yellow[scale],
        tailwind: tailwind,
        terminal: {
            black: tailwind.neutral[terminalScale],
            blue: tailwind.blue[terminalScale],
            brightBlack: tailwind.neutral[terminalBrightScale],
            brightBlue: tailwind.blue[terminalBrightScale],
            brightCyan: tailwind.cyan[terminalBrightScale],
            brightGreen: tailwind.green[terminalBrightScale],
            brightMagenta: tailwind.pink[terminalBrightScale],
            brightRed: tailwind.red[terminalBrightScale],
            brightWhite: tailwind.neutral[terminalBrightScale],
            brightYellow: tailwind.yellow[terminalBrightScale],
            cyan: tailwind.cyan[terminalScale],
            green: tailwind.green[terminalScale],
            magenta: tailwind.pink[terminalScale],
            red: tailwind.red[terminalScale],
            white: tailwind.neutral[terminalScale],
            yellow: tailwind.yellow[terminalScale],
        },
    };
};

const generateTheme = (theme: Theme) => {
    return {
        $schema: "vscode://schemas/color-theme",
        name: theme.name,
        semanticHighlighting: true,
        colors: {
            "activityBar.activeBackground": theme.transparent,
            "activityBar.activeBorder": theme.transparent,
            "activityBar.activeFocusBorder": theme.transparent,
            "activityBar.background": theme.background2,
            "activityBar.border": theme.border,
            "activityBar.dropBorder": theme.foreground,
            "activityBar.foreground": theme.foreground,
            "activityBar.inactiveForeground": theme.dim,
            "activityBarBadge.background": theme.foreground,
            "activityBarBadge.foreground": theme.background,
            "activityBarTop.activeBorder": theme.transparent,
            "activityBarTop.dropBorder": theme.foreground,
            "activityBarTop.foreground": theme.foreground,
            "activityBarTop.inactiveForeground": theme.dim,
            "badge.background": theme.foreground,
            "badge.foreground": theme.background,
            "banner.background": theme.focus,
            "banner.foreground": theme.foreground,
            "banner.iconForeground": theme.foreground,
            "breadcrumb.activeSelectionForeground": theme.foreground,
            "breadcrumb.background": theme.background,
            "breadcrumb.focusForeground": theme.foreground,
            "breadcrumb.foreground": theme.dim,
            "breadcrumbPicker.background": theme.background,
            "button.background": theme.focus,
            "button.border": theme.focus,
            "button.foreground": theme.foreground,
            "button.hoverBackground": theme.hover,
            "button.secondaryBackground": theme.focus,
            "button.secondaryForeground": theme.foreground,
            "button.secondaryHoverBackground": theme.hover,
            "button.separator": theme.border,
            "checkbox.background": theme.background,
            "checkbox.border": theme.border,
            "checkbox.foreground": theme.foreground,
            "checkbox.selectBackground": theme.background,
            "checkbox.selectBorder": theme.border,
            "commandCenter.activeBackground": theme.hover,
            "commandCenter.activeBorder": theme.hover,
            "commandCenter.activeForeground": theme.foreground,
            "commandCenter.background": theme.background,
            "commandCenter.border": theme.border,
            "commandCenter.debuggingBackground": theme.focus,
            "commandCenter.foreground": theme.foreground,
            "commandCenter.inactiveBorder": theme.border,
            "commandCenter.inactiveForeground": theme.foreground,
            "debugConsole.errorForeground": theme.error,
            "debugConsole.infoForeground": theme.accent,
            "debugConsole.sourceForeground": theme.comment,
            "debugConsole.warningForeground": theme.warning,
            "debugConsoleInputIcon.foreground": theme.foreground,
            "debugExceptionWidget.background": `${theme.error}40`,
            "debugExceptionWidget.border": theme.error,
            "debugIcon.breakpointCurrentStackframeForeground": theme.tailwind.green[theme.scale],
            "debugIcon.breakpointDisabledForeground": theme.dim,
            "debugIcon.breakpointForeground": theme.tailwind.red[theme.scale],
            "debugIcon.breakpointStackframeForeground": theme.tailwind.red[theme.scale],
            "debugIcon.breakpointUnverifiedForeground": theme.dim,
            "debugIcon.continueForeground": theme.tailwind.blue[theme.scale],
            "debugIcon.disconnectForeground": theme.tailwind.red[theme.scale],
            "debugIcon.pauseForeground": theme.tailwind.blue[theme.scale],
            "debugIcon.restartForeground": theme.tailwind.green[theme.scale],
            "debugIcon.startForeground": theme.tailwind.green[theme.scale],
            "debugIcon.stepBackForeground": theme.tailwind.blue[theme.scale],
            "debugIcon.stepIntoForeground": theme.tailwind.blue[theme.scale],
            "debugIcon.stepOutForeground": theme.tailwind.blue[theme.scale],
            "debugIcon.stepOverForeground": theme.tailwind.blue[theme.scale],
            "debugIcon.stopForeground": theme.tailwind.red[theme.scale],
            "debugToolBar.background": theme.background,
            "debugToolBar.border": theme.border,
            "debugView.exceptionLabelBackground": theme.background2,
            "debugView.exceptionLabelForeground": theme.foreground,
            "debugView.stateLabelBackground": theme.background2,
            "debugView.stateLabelForeground": theme.foreground,
            "debugView.valueChangedHighlight": theme.tailwind.blue[theme.scale],
            "descriptionForeground": theme.foreground,
            "disabledForeground": theme.dim,
            "dropdown.background": theme.background,
            "dropdown.border": theme.border,
            "dropdown.foreground": theme.foreground,
            "dropdown.listBackground": theme.background,
            "editor.background": theme.background,
            "editor.findMatchBackground": `${theme.accent}80`,
            "editor.findMatchBorder": theme.accent,
            "editor.findMatchHighlightBackground": `${theme.accent}80`,
            "editor.findMatchHighlightBorder": theme.accent,
            "editor.foreground": theme.foreground,
            "editor.lineHighlightBackground": theme.focus,
            "editor.lineHighlightBorder": theme.transparent,
            "editor.selectionBackground": `${theme.accent}40`,
            "editor.selectionForeground": theme.foreground,
            "editor.selectionHighlightBackground": theme.focus,
            "editor.selectionHighlightBorder": `${theme.success}59`,
            "editor.wordHighlightBackground": theme.transparent,
            "editor.wordHighlightBorder": `${theme.success}59`,
            "editor.wordHighlightStrongBackground": theme.transparent,
            "editor.wordHighlightStrongBorder": `${theme.success}59`,
            "editor.wordHighlightTextBackground": theme.transparent,
            "editor.wordHighlightTextBorder": `${theme.success}59`,
            "editorActiveLineNumber.foreground": theme.foreground,
            "editorBracketHighlight.foreground1": theme.tailwind.orange[theme.scale],
            "editorBracketHighlight.foreground2": theme.tailwind.yellow[theme.scale],
            "editorBracketHighlight.foreground3": theme.tailwind.cyan[theme.scale],
            "editorBracketHighlight.foreground4": theme.tailwind.blue[theme.scale],
            "editorBracketHighlight.foreground5": theme.tailwind.purple[theme.scale],
            "editorBracketHighlight.foreground6": theme.tailwind.pink[theme.scale],
            "editorBracketHighlight.unexpectedBracket.foreground": theme.tailwind.red[theme.scale],
            "editorBracketMatch.background": theme.transparent,
            "editorBracketMatch.border": theme.success,
            "editorBracketPairGuide.activeBackground1": theme.success,
            "editorBracketPairGuide.activeBackground2": theme.success,
            "editorBracketPairGuide.activeBackground3": theme.success,
            "editorBracketPairGuide.activeBackground4": theme.success,
            "editorBracketPairGuide.activeBackground5": theme.success,
            "editorBracketPairGuide.activeBackground6": theme.success,
            "editorBracketPairGuide.background1": theme.tailwind.orange[theme.scale],
            "editorBracketPairGuide.background2": theme.tailwind.yellow[theme.scale],
            "editorBracketPairGuide.background3": theme.tailwind.cyan[theme.scale],
            "editorBracketPairGuide.background4": theme.tailwind.blue[theme.scale],
            "editorBracketPairGuide.background5": theme.tailwind.purple[theme.scale],
            "editorBracketPairGuide.background6": theme.tailwind.pink[theme.scale],
            "editorCursor.background": theme.background,
            "editorCursor.foreground": theme.foreground,
            "editorGroup.border": theme.border,
            "editorGroup.dropBackground": theme.focus,
            "editorGroup.emptyBackground": theme.background,
            "editorGroupHeader.border": theme.transparent,
            "editorGroupHeader.noTabsBackground": theme.transparent,
            "editorGroupHeader.tabsBackground": theme.background2,
            "editorGroupHeader.tabsBorder": theme.transparent,
            "editorGutter.addedBackground": theme.terminal.green,
            "editorGutter.background": theme.background,
            "editorGutter.deletedBackground": theme.terminal.red,
            "editorGutter.foldingControlForeground": theme.foreground,
            "editorGutter.modifiedBackground": theme.terminal.yellow,
            "editorIndentGuide.activeBackground": theme.success,
            "editorIndentGuide.activeBackground1": theme.success,
            "editorIndentGuide.activeBackground2": theme.success,
            "editorIndentGuide.activeBackground3": theme.success,
            "editorIndentGuide.activeBackground4": theme.success,
            "editorIndentGuide.activeBackground5": theme.success,
            "editorIndentGuide.activeBackground6": theme.success,
            "editorIndentGuide.background": theme.background2,
            "editorIndentGuide.background1": theme.background2,
            "editorIndentGuide.background2": theme.background2,
            "editorIndentGuide.background3": theme.background2,
            "editorIndentGuide.background4": theme.background2,
            "editorIndentGuide.background5": theme.background2,
            "editorIndentGuide.background6": theme.background2,
            "editorInlayHint.background": theme.background2,
            "editorInlayHint.foreground": theme.dim,
            "editorInlayHint.parameterBackground": theme.background2,
            "editorInlayHint.parameterForeground": theme.dim,
            "editorInlayHint.typeBackground": theme.background2,
            "editorInlayHint.typeForeground": theme.dim,
            "editorLineNumber.activeForeground": theme.foreground,
            "editorLineNumber.dimmedForeground": theme.dim,
            "editorLineNumber.foreground": theme.dim,
            "editorOverviewRuler.background": theme.transparent,
            "editorOverviewRuler.border": theme.transparent,
            "editorOverviewRuler.bracketMatchForeground": theme.tailwind.green[theme.scale],
            "editorOverviewRuler.deletedForeground": theme.terminal.red,
            "editorOverviewRuler.errorForeground": theme.error,
            "editorOverviewRuler.findMatchForeground": `${theme.foreground}80`,
            "editorOverviewRuler.modifiedForeground": theme.terminal.yellow,
            "editorOverviewRuler.selectionHighlightForeground": theme.foreground,
            "editorOverviewRuler.warningForeground": theme.tailwind.yellow[theme.scale],
            "editorPane.background": theme.background2,
            "editorRuler.foreground": theme.dim,
            "editorStickyScroll.background": theme.background,
            "editorStickyScroll.border": theme.border,
            "editorStickyScroll.shadow": theme.shadow,
            "editorStickyScrollHover.background": theme.hover,
            "editorUnicodeHighlight.background": theme.transparent,
            "editorUnicodeHighlight.border": theme.terminal.red,
            "editorWidget.background": theme.background,
            "editorWidget.border": theme.border,
            "editorWidget.foreground": theme.foreground,
            "editorWidget.resizeBorder": theme.border,
            "errorForeground": theme.error,
            "extensionBadge.remoteBackground": theme.background2,
            "extensionBadge.remoteForeground": theme.foreground,
            "extensionButton.background": theme.focus,
            "extensionButton.foreground": theme.foreground,
            "extensionButton.hoverBackground": theme.hover,
            "extensionButton.prominentBackground": theme.focus,
            "extensionButton.prominentForeground": theme.foreground,
            "extensionButton.prominentHoverBackground": theme.hover,
            "extensionButton.separator": theme.border,
            "extensionIcon.preReleaseForeground": theme.terminal.cyan,
            "extensionIcon.sponsorForeground": theme.terminal.yellow,
            "extensionIcon.starForeground": theme.terminal.yellow,
            "extensionIcon.verifiedForeground": theme.terminal.green,
            "focusBorder": theme.transparent,
            "foreground": theme.foreground,
            "gitDecoration.addedResourceForeground": theme.terminal.green,
            "gitDecoration.conflictingResourceForeground": theme.terminal.magenta,
            "gitDecoration.deletedResourceForeground": theme.terminal.red,
            "gitDecoration.ignoredResourceForeground": theme.dim,
            "gitDecoration.modifiedResourceForeground": theme.terminal.yellow,
            "gitDecoration.renamedResourceForeground": theme.terminal.green,
            "gitDecoration.stageDeletedResourceForeground": theme.terminal.red,
            "gitDecoration.stageModifiedResourceForeground": theme.terminal.yellow,
            "gitDecoration.submoduleResourceForeground": theme.terminal.blue,
            "gitDecoration.untrackedResourceForeground": theme.terminal.green,
            "icon.foreground": theme.foreground,
            "input.background": theme.background,
            "input.border": theme.border,
            "input.foreground": theme.foreground,
            "input.placeholderForeground": theme.dim,
            "inputOption.activeBackground": theme.focus,
            "inputOption.activeBorder": theme.transparent,
            "inputOption.activeForeground": theme.foreground,
            "inputOption.hoverBackground": theme.hover,
            "keybindingLabel.background": theme.background2,
            "keybindingLabel.border": theme.border,
            "keybindingLabel.bottomBorder": theme.border,
            "keybindingLabel.foreground": theme.foreground,
            "keybindingTable.headerBackground": theme.focus,
            "keybindingTable.rowsBackground": theme.background2,
            "list.activeSelectionBackground": theme.focus,
            "list.activeSelectionForeground": theme.foreground,
            "list.activeSelectionIconForeground": theme.foreground,
            "list.deemphasizedForeground": theme.dim,
            "list.dropBackground": theme.focus,
            "list.dropBetweenBackground": theme.focus,
            "list.errorForeground": theme.tailwind.red[theme.scale],
            "list.filterMatchBackground": theme.tailwind.green[theme.scale],
            "list.filterMatchBorder": theme.tailwind.green[theme.scale],
            "list.focusAndSelectionOutline": theme.border,
            "list.focusBackground": theme.transparent,
            "list.focusForeground": theme.foreground,
            "list.focusHighlightForeground": theme.foreground,
            "list.focusOutline": theme.border,
            "list.highlightForeground": theme.foreground,
            "list.hoverBackground": theme.hover,
            "list.hoverForeground": theme.foreground,
            "list.inactiveFocusBackground": theme.transparent,
            "list.inactiveFocusOutline": theme.border,
            "list.inactiveSelectionBackground": theme.hover,
            "list.inactiveSelectionForeground": theme.foreground,
            "list.inactiveSelectionIconForeground": theme.foreground,
            "list.invalidItemForeground": theme.tailwind.red[theme.scale],
            "list.warningForeground": theme.tailwind.yellow[theme.scale],
            "listFilterWidget.background": theme.background,
            "listFilterWidget.noMatchesOutline": theme.tailwind.red[theme.scale],
            "listFilterWidget.outline": theme.border,
            "listFilterWidget.shadow": theme.shadow,
            "menu.background": theme.background,
            "menu.border": theme.border,
            "menu.foreground": theme.foreground,
            "menu.selectionBackground": theme.hover,
            "menu.selectionBorder": theme.transparent,
            "menu.selectionForeground": theme.foreground,
            "menu.separatorBackground": theme.border,
            "menubar.selectionBackground": theme.hover,
            "menubar.selectionBorder": theme.transparent,
            "menubar.selectionForeground": theme.foreground,
            "minimap.background": theme.transparent,
            "minimapSlider.activeBackground": theme.focus,
            "minimapSlider.background": theme.focus,
            "minimapSlider.hoverBackground": theme.hover,
            "notificationCenter.border": theme.border,
            "notificationCenterHeader.background": theme.background,
            "notificationCenterHeader.foreground": theme.foreground,
            "notificationLink.foreground": theme.accent,
            "notifications.background": theme.background,
            "notifications.border": theme.border,
            "notifications.foreground": theme.foreground,
            "notificationsErrorIcon.foreground": theme.tailwind.red[theme.scale],
            "notificationsInfoIcon.foreground": theme.tailwind.amber[theme.scale],
            "notificationsWarningIcon.foreground": theme.tailwind.yellow[theme.scale],
            "notificationToast.border": theme.border,
            "outputView.background": theme.background,
            "outputViewStickyScroll.background": theme.background,
            "panel.background": theme.background,
            "panel.border": theme.border,
            "panel.dropBorder": theme.foreground,
            "panelInput.border": theme.border,
            "panelSection.border": theme.border,
            "panelSection.dropBackground": theme.focus,
            "panelSectionHeader.background": theme.background,
            "panelSectionHeader.border": theme.border,
            "panelSectionHeader.foreground": theme.foreground,
            "panelTitle.activeBorder": theme.foreground,
            "panelTitle.activeForeground": theme.foreground,
            "panelTitle.inactiveForeground": theme.dim,
            "peekView.border": theme.border,
            "peekViewEditor.background": theme.background2,
            "peekViewEditor.matchHighlightBackground": theme.focus,
            "peekViewEditor.matchHighlightBorder": theme.transparent,
            "peekViewEditorGutter.background": theme.background2,
            "peekViewEditorStickyScroll.background": theme.background2,
            "peekViewResult.background": theme.background2,
            "peekViewResult.fileForeground": theme.foreground,
            "peekViewResult.lineForeground": theme.foreground,
            "peekViewResult.matchHighlightBackground": theme.focus,
            "peekViewResult.selectionBackground": theme.focus,
            "peekViewResult.selectionForeground": theme.foreground,
            "peekViewTitle.background": theme.focus,
            "peekViewTitleDescription.foreground": theme.foreground,
            "peekViewTitleLabel.foreground": theme.foreground,
            "pickerGroup.border": theme.border,
            "pickerGroup.foreground": theme.foreground,
            "quickInput.background": theme.background,
            "quickInput.foreground": theme.foreground,
            "quickInputList.focusBackground": theme.focus,
            "quickInputList.focusForeground": theme.foreground,
            "quickInputList.focusIconForeground": theme.foreground,
            "scrollbar.shadow": theme.shadow,
            "scrollbarSlider.activeBackground": theme.focus,
            "scrollbarSlider.background": theme.hover,
            "scrollbarSlider.hoverBackground": theme.hover,
            "search.resultsInfoForeground": theme.tailwind.amber[theme.scale],
            "selection.background": theme.focus,
            "settings.checkboxBackground": theme.background,
            "settings.checkboxBorder": theme.border,
            "settings.checkboxForeground": theme.foreground,
            "settings.dropdownBackground": theme.background,
            "settings.dropdownBorder": theme.border,
            "settings.dropdownForeground": theme.foreground,
            "settings.dropdownListBorder": theme.border,
            "settings.focusedRowBackground": theme.focus,
            "settings.focusedRowBorder": theme.border,
            "settings.headerBorder": theme.border,
            "settings.headerForeground": theme.foreground,
            "settings.modifiedItemIndicator": theme.terminal.yellow,
            "settings.numberInputBackground": theme.background,
            "settings.numberInputBorder": theme.border,
            "settings.numberInputForeground": theme.foreground,
            "settings.rowHoverBackground": theme.hover,
            "settings.sashBorder": theme.border,
            "settings.settingsHeaderHoverForeground": theme.foreground,
            "settings.textInputBackground": theme.background,
            "settings.textInputBorder": theme.border,
            "settings.textInputForeground": theme.foreground,
            "sideBar.background": theme.background2,
            "sideBar.border": theme.border,
            "sideBar.dropBackground": theme.focus,
            "sideBar.foreground": theme.foreground,
            "sideBarSectionHeader.background": theme.background2,
            "sideBarSectionHeader.border": theme.border,
            "sideBarSectionHeader.foreground": theme.foreground,
            "sideBarTitle.foreground": theme.foreground,
            "sideBySideEditor.horizontalBorder": theme.border,
            "sideBySideEditor.verticalBorder": theme.border,
            "simpleFindWidget.sashBorder": theme.border,
            "statusBar.background": theme.background2,
            "statusBar.border": theme.border,
            "statusBar.debuggingBackground": theme.focus,
            "statusBar.debuggingBorder": theme.focus,
            "statusBar.debuggingForeground": theme.foreground,
            "statusBar.focusBorder": theme.focus,
            "statusBar.foreground": theme.foreground,
            "statusBar.noFolderBackground": theme.background,
            "statusBar.noFolderBorder": theme.border,
            "statusBar.noFolderForeground": theme.foreground,
            "statusBarItem.activeBackground": theme.focus,
            "statusBarItem.compactHoverBackground": theme.hover,
            "statusBarItem.focusBorder": theme.focus,
            "statusBarItem.hoverBackground": theme.hover,
            "statusBarItem.hoverForeground": theme.foreground,
            "symbolIcon.arrayForeground": theme.tailwind.yellow[theme.scale],
            "symbolIcon.booleanForeground": theme.tailwind.yellow[theme.scale],
            "symbolIcon.classForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.colorForeground": theme.foreground,
            "symbolIcon.constantForeground": theme.tailwind.yellow[theme.scale],
            "symbolIcon.constructorForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.enumeratorForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.enumeratorMemberForeground": theme.tailwind.blue[theme.scale],
            "symbolIcon.eventForeground": theme.tailwind.amber[theme.scale],
            "symbolIcon.fieldForeground": theme.tailwind.indigo[theme.scale],
            "symbolIcon.fileForeground": theme.foreground,
            "symbolIcon.folderForeground": theme.foreground,
            "symbolIcon.functionForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.interfaceForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.keyForeground": theme.tailwind.rose[theme.scale],
            "symbolIcon.keywordForeground": theme.tailwind.rose[theme.scale],
            "symbolIcon.methodForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.moduleForeground": theme.tailwind.blue[theme.scale],
            "symbolIcon.namespaceForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.nullForeground": theme.tailwind.red[theme.scale],
            "symbolIcon.numberForeground": theme.tailwind.purple[theme.scale],
            "symbolIcon.objectForeground": theme.tailwind.blue[theme.scale],
            "symbolIcon.operatorForeground": theme.tailwind.neutral[theme.scale],
            "symbolIcon.packageForeground": theme.tailwind.blue[theme.scale],
            "symbolIcon.propertyForeground": theme.tailwind.indigo[theme.scale],
            "symbolIcon.referenceForeground": theme.tailwind.blue[theme.scale],
            "symbolIcon.snippetForeground": theme.foreground,
            "symbolIcon.stringForeground": theme.tailwind.sky[theme.scale],
            "symbolIcon.structForeground": theme.tailwind.fuchsia[theme.scale],
            "symbolIcon.textForeground": theme.foreground,
            "symbolIcon.typeParameterForeground": theme.tailwind.blue[theme.scale],
            "symbolIcon.unitForeground": theme.tailwind.rose[theme.scale],
            "symbolIcon.variableForeground": theme.tailwind.blue[theme.scale],
            "tab.activeBackground": theme.background,
            "tab.activeBorder": theme.transparent,
            "tab.activeBorderTop": theme.transparent,
            "tab.activeForeground": theme.foreground,
            "tab.activeModifiedBorder": theme.transparent,
            "tab.border": theme.border,
            "tab.dragAndDropBorder": theme.foreground,
            "tab.hoverBackground": theme.hover,
            "tab.hoverBorder": theme.transparent,
            "tab.hoverForeground": theme.foreground,
            "tab.inactiveBackground": theme.background2,
            "tab.inactiveForeground": theme.foreground,
            "tab.inactiveModifiedBorder": theme.transparent,
            "tab.lastPinnedBorder": theme.transparent,
            "tab.unfocusedActiveBackground": theme.transparent,
            "tab.unfocusedActiveBorder": theme.transparent,
            "tab.unfocusedActiveBorderTop": theme.transparent,
            "tab.unfocusedActiveForeground": theme.foreground,
            "tab.unfocusedActiveModifiedBorder": theme.transparent,
            "tab.unfocusedHoverBackground": theme.hover,
            "tab.unfocusedHoverBorder": theme.transparent,
            "tab.unfocusedHoverForeground": theme.foreground,
            "tab.unfocusedInactiveBackground": theme.transparent,
            "tab.unfocusedInactiveForeground": theme.foreground,
            "tab.unfocusedInactiveModifiedBorder": theme.transparent,
            "terminal.ansiBlack": theme.terminal.black,
            "terminal.ansiBlue": theme.terminal.blue,
            "terminal.ansiBrightBlack": theme.terminal.brightBlack,
            "terminal.ansiBrightBlue": theme.terminal.brightBlue,
            "terminal.ansiBrightCyan": theme.terminal.brightCyan,
            "terminal.ansiBrightGreen": theme.terminal.brightGreen,
            "terminal.ansiBrightMagenta": theme.terminal.brightMagenta,
            "terminal.ansiBrightRed": theme.terminal.brightRed,
            "terminal.ansiBrightWhite": theme.terminal.brightWhite,
            "terminal.ansiBrightYellow": theme.terminal.brightYellow,
            "terminal.ansiCyan": theme.terminal.cyan,
            "terminal.ansiGreen": theme.terminal.green,
            "terminal.ansiMagenta": theme.terminal.magenta,
            "terminal.ansiRed": theme.terminal.red,
            "terminal.ansiWhite": theme.terminal.white,
            "terminal.ansiYellow": theme.terminal.yellow,
            "terminal.background": theme.background,
            "terminal.border": theme.border,
            "terminal.dropBackground": theme.focus,
            "terminal.findMatchBackground": theme.focus,
            "terminal.findMatchBorder": theme.focus,
            "terminal.findMatchHighlightBackground": theme.border,
            "terminal.findMatchHighlightBorder": theme.border,
            "terminal.foreground": theme.foreground,
            "terminal.hoverHighlightBackground": theme.hover,
            "terminal.inactiveSelectionBackground": theme.hover,
            "terminal.selectionBackground": `${theme.accent}40`,
            "terminal.selectionForeground": theme.foreground,
            "terminal.tab.activeBorder": theme.transparent,
            "terminalCommandDecoration.defaultBackground": theme.foreground,
            "terminalCommandDecoration.errorBackground": theme.tailwind.red[theme.scale],
            "terminalCommandDecoration.successBackground": theme.tailwind.green[theme.scale],
            "terminalCursor.background": theme.transparent,
            "terminalCursor.foreground": theme.accent,
            "terminalOverviewRuler.cursorForeground": theme.foreground,
            "terminalOverviewRuler.findMatchForeground": theme.tailwind.green[theme.scale],
            "terminalStickyScroll.background": theme.background,
            "terminalStickyScrollHover.background": theme.background,
            "textLink.activeForeground": theme.accent,
            "textLink.foreground": theme.accent,
            "textSeparator.foreground": theme.border,
            "titleBar.activeBackground": theme.background2,
            "titleBar.activeForeground": theme.foreground,
            "titleBar.border": theme.border,
            "titleBar.inactiveBackground": theme.background2,
            "titleBar.inactiveForeground": theme.dim,
            "toolbar.activeBackground": theme.focus,
            "toolbar.hoverBackground": theme.hover,
            "toolbar.hoverOutline": theme.transparent,
            "tree.inactiveIndentGuidesStroke":
                theme.tailwind[theme.keys.tone][theme.mode === "Dark" ? 700 : 300],
            "tree.indentGuidesStroke":
                theme.tailwind[theme.keys.tone][theme.mode === "Dark" ? 600 : 400],
            "walkThrough.embeddedEditorBackground": theme.background,
            "walkthrough.stepTitle.foreground": theme.foreground,
            "welcomePage.background": theme.background,
            "welcomePage.progress.background": theme.background,
            "welcomePage.progress.foreground": theme.foreground,
            "welcomePage.tileBackground": theme.background2,
            "welcomePage.tileBorder": theme.border,
            "welcomePage.tileHoverBackground": theme.hover,
            "widget.border": theme.border,
            "widget.shadow": theme.shadow,

            // "editorOverviewRuler.addedForeground": test,
            // "editorOverviewRuler.commentForeground": test,
            // "editorOverviewRuler.commentUnresolvedForeground": test,
            // "editorOverviewRuler.commonContentForeground": test,
            // "editorOverviewRuler.currentContentForeground": test,
            // "editorOverviewRuler.incomingContentForeground": test,
            // "editorOverviewRuler.infoForeground": test,
            // "editorOverviewRuler.inlineChatInserted": test,
            // "editorOverviewRuler.inlineChatRemoved": test,
            // "editorOverviewRuler.rangeHighlightForeground": test,
            // "editorOverviewRuler.wordHighlightForeground": test,
            // "editorOverviewRuler.wordHighlightStrongForeground": test,
            // "editorOverviewRuler.wordHighlightTextForeground": test,
            // "actionBar.toggledBackground": test,
            // "charts.blue": test,
            // "charts.foreground": test,
            // "charts.green": test,
            // "charts.lines": test,
            // "charts.orange": test,
            // "charts.purple": test,
            // "charts.red": test,
            // "charts.yellow": test,
            // "chat.avatarBackground": test,
            // "chat.avatarForeground": test,
            // "chat.requestBackground": test,
            // "chat.requestBorder": test,
            // "chat.slashCommandBackground": test,
            // "chat.slashCommandForeground": test,
            // "commentsView.resolvedIcon": test,
            // "commentsView.unresolvedIcon": test,
            // "contrastActiveBorder": test,
            // "contrastBorder": test,
            // "debugTokenExpression.boolean": test,
            // "debugTokenExpression.error": test,
            // "debugTokenExpression.name": test,
            // "debugTokenExpression.number": test,
            // "debugTokenExpression.string": test,
            // "debugTokenExpression.value": test,
            // "diffEditor.border": test,
            // "diffEditor.diagonalFill": test,
            // "diffEditor.insertedLineBackground": test,
            // "diffEditor.insertedTextBackground": test,
            // "diffEditor.insertedTextBorder": test,
            // "diffEditor.move.border": test,
            // "diffEditor.moveActive.border": test,
            // "diffEditor.removedLineBackground": test,
            // "diffEditor.removedTextBackground": test,
            // "diffEditor.removedTextBorder": test,
            // "diffEditor.unchangedCodeBackground": test,
            // "diffEditor.unchangedRegionBackground": test,
            // "diffEditor.unchangedRegionForeground": test,
            // "diffEditor.unchangedRegionShadow": test,
            // "diffEditorGutter.insertedLineBackground": test,
            // "diffEditorGutter.removedLineBackground": test,
            // "diffEditorOverview.insertedForeground": test,
            // "diffEditorOverview.removedForeground": test,
            // "editor.findRangeHighlightBackground": test,
            // "editor.findRangeHighlightBorder": test,
            // "editor.focusedStackFrameHighlightBackground": test,
            // "editor.foldBackground": test,
            // "editor.hoverHighlightBackground": test,
            // "editor.inactiveSelectionBackground": test,
            // "editor.inlineValuesBackground": test,
            // "editor.inlineValuesForeground": test,
            // "editor.linkedEditingBackground": test,
            // "editor.rangeHighlightBackground": test,
            // "editor.rangeHighlightBorder": test,
            // "editor.snippetFinalTabstopHighlightBackground": test,
            // "editor.snippetFinalTabstopHighlightBorder": test,
            // "editor.snippetTabstopHighlightBackground": test,
            // "editor.snippetTabstopHighlightBorder": test,
            // "editor.stackFrameHighlightBackground": test,
            // "editor.symbolHighlightBackground": test,
            // "editor.symbolHighlightBorder": test,
            // "editorCodeLens.foreground": test,
            // "editorCommentsWidget.rangeActiveBackground": test,
            // "editorCommentsWidget.rangeBackground": test,
            // "editorCommentsWidget.replyInputBackground": test,
            // "editorCommentsWidget.resolvedBorder": test,
            // "editorCommentsWidget.unresolvedBorder": test,
            // "editorError.background": test,
            // "editorError.border": test,
            // "editorError.foreground": test,
            // "editorGhostText.background": test,
            // "editorGhostText.border": test,
            // "editorGhostText.foreground": test,
            // "editorGroup.dropIntoPromptBackground": test,
            // "editorGroup.dropIntoPromptBorder": test,
            // "editorGroup.dropIntoPromptForeground": test,
            // "editorGroup.focusedEmptyBorder": test,
            // "editorGutter.commentGlyphForeground": test,
            // "editorGutter.commentRangeForeground": test,
            // "editorGutter.commentUnresolvedGlyphForeground": test,
            // "editorHint.border": test,
            // "editorHint.foreground": test,
            // "editorHoverWidget.background": test,
            // "editorHoverWidget.border": test,
            // "editorHoverWidget.foreground": test,
            // "editorHoverWidget.highlightForeground": test,
            // "editorHoverWidget.statusBarBackground": test,
            // "editorInfo.background": test,
            // "editorInfo.border": test,
            // "editorInfo.foreground": test,
            // "editorLightBulb.foreground": test,
            // "editorLightBulbAi.foreground": test,
            // "editorLightBulbAutoFix.foreground": test,
            // "editorLink.activeForeground": test,
            // "editorMarkerNavigation.background": test,
            // "editorMarkerNavigationError.background": test,
            // "editorMarkerNavigationError.headerBackground": test,
            // "editorMarkerNavigationInfo.background": test,
            // "editorMarkerNavigationInfo.headerBackground": test,
            // "editorMarkerNavigationWarning.background": test,
            // "editorMarkerNavigationWarning.headerBackground": test,
            // "editorSuggestWidget.background": test,
            // "editorSuggestWidget.border": test,
            // "editorSuggestWidget.focusHighlightForeground": test,
            // "editorSuggestWidget.foreground": test,
            // "editorSuggestWidget.highlightForeground": test,
            // "editorSuggestWidget.selectedBackground": test,
            // "editorSuggestWidget.selectedForeground": test,
            // "editorSuggestWidget.selectedIconForeground": test,
            // "editorSuggestWidgetStatus.foreground": test,
            // "editorUnnecessaryCode.border": test,
            // "editorUnnecessaryCode.opacity": test,
            // "editorWarning.background": test,
            // "editorWarning.border": test,
            // "editorWarning.foreground": test,
            // "editorWatermark.foreground": test,
            // "editorWhitespace.foreground": test,
            // "inlineChat.background": test,
            // "inlineChat.border": test,
            // "inlineChat.regionHighlight": test,
            // "inlineChat.shadow": test,
            // "inlineChatDiff.inserted": test,
            // "inlineChatDiff.removed": test,
            // "inlineChatInput.background": test,
            // "inlineChatInput.border": test,
            // "inlineChatInput.focusBorder": test,
            // "inlineChatInput.placeholderForeground": test,
            // "inputValidation.errorBackground": test,
            // "inputValidation.errorBorder": test,
            // "inputValidation.errorForeground": test,
            // "inputValidation.infoBackground": test,
            // "inputValidation.infoBorder": test,
            // "inputValidation.infoForeground": test,
            // "inputValidation.warningBackground": test,
            // "inputValidation.warningBorder": test,
            // "inputValidation.warningForeground": test,
            // "interactive.activeCodeBorder": test,
            // "interactive.inactiveCodeBorder": test,
            // "merge.border": test,
            // "merge.commonContentBackground": test,
            // "merge.commonHeaderBackground": test,
            // "merge.currentContentBackground": test,
            // "merge.currentHeaderBackground": test,
            // "merge.incomingContentBackground": test,
            // "merge.incomingHeaderBackground": test,
            // "mergeEditor.change.background": test,
            // "mergeEditor.change.word.background": test,
            // "mergeEditor.changeBase.background": test,
            // "mergeEditor.changeBase.word.background": test,
            // "mergeEditor.conflict.handled.minimapOverViewRuler": test,
            // "mergeEditor.conflict.handledFocused.border": test,
            // "mergeEditor.conflict.handledUnfocused.border": test,
            // "mergeEditor.conflict.input1.background": test,
            // "mergeEditor.conflict.input2.background": test,
            // "mergeEditor.conflict.unhandled.minimapOverViewRuler": test,
            // "mergeEditor.conflict.unhandledFocused.border": test,
            // "mergeEditor.conflict.unhandledUnfocused.border": test,
            // "mergeEditor.conflictingLines.background": test,
            // "minimap.errorHighlight": test,
            // "minimap.findMatchHighlight": test,
            // "minimap.foregroundOpacity": test,
            // "minimap.infoHighlight": test,
            // "minimap.selectionHighlight": test,
            // "minimap.selectionOccurrenceHighlight": test,
            // "minimap.warningHighlight": test,
            // "minimapGutter.addedBackground": test,
            // "minimapGutter.deletedBackground": test,
            // "minimapGutter.modifiedBackground": test,
            // "multiDiffEditor.background": test,
            // "multiDiffEditor.border": test,
            // "multiDiffEditor.headerBackground": test,
            // "notebook.cellBorderColor": test,
            // "notebook.cellEditorBackground": test,
            // "notebook.cellHoverBackground": test,
            // "notebook.cellInsertionIndicator": test,
            // "notebook.cellStatusBarItemHoverBackground": test,
            // "notebook.cellToolbarSeparator": test,
            // "notebook.editorBackground": test,
            // "notebook.focusedCellBackground": test,
            // "notebook.focusedCellBorder": test,
            // "notebook.focusedEditorBorder": test,
            // "notebook.inactiveFocusedCellBorder": test,
            // "notebook.inactiveSelectedCellBorder": test,
            // "notebook.outputContainerBackgroundColor": test,
            // "notebook.outputContainerBorderColor": test,
            // "notebook.selectedCellBackground": test,
            // "notebook.selectedCellBorder": test,
            // "notebook.symbolHighlightBackground": test,
            // "notebookEditorOverviewRuler.runningCellForeground": test,
            // "notebookScrollbarSlider.activeBackground": test,
            // "notebookScrollbarSlider.background": test,
            // "notebookScrollbarSlider.hoverBackground": test,
            // "notebookStatusErrorIcon.foreground": test,
            // "notebookStatusRunningIcon.foreground": test,
            // "notebookStatusSuccessIcon.foreground": test,
            // "ports.iconRunningProcessForeground": test,
            // "problemsErrorIcon.foreground": test,
            // "problemsInfoIcon.foreground": test,
            // "problemsWarningIcon.foreground": test,
            // "profileBadge.background": test,
            // "profileBadge.foreground": test,
            // "progressBar.background": test,
            // "quickInput.list.focusBackground": test,
            // "quickInputTitle.background": test,
            // "sash.hoverBorder": test,
            // "scm.historyItemAdditionsForeground": test,
            // "scm.historyItemDeletionsForeground": test,
            // "scm.historyItemSelectedStatisticsBorder": test,
            // "scm.historyItemStatisticsBorder": test,
            // "searchEditor.findMatchBackground": test,
            // "searchEditor.findMatchBorder": test,
            // "searchEditor.textInputBorder": test,
            // "statusBarItem.errorBackground": test,
            // "statusBarItem.errorForeground": test,
            // "statusBarItem.errorHoverBackground": test,
            // "statusBarItem.errorHoverForeground": test,
            // "statusBarItem.offlineBackground": test,
            // "statusBarItem.offlineForeground": test,
            // "statusBarItem.offlineHoverBackground": test,
            // "statusBarItem.offlineHoverForeground": test,
            // "statusBarItem.prominentBackground": test,
            // "statusBarItem.prominentForeground": test,
            // "statusBarItem.prominentHoverBackground": test,
            // "statusBarItem.prominentHoverForeground": test,
            // "statusBarItem.remoteBackground": test,
            // "statusBarItem.remoteForeground": test,
            // "statusBarItem.remoteHoverBackground": test,
            // "statusBarItem.remoteHoverForeground": test,
            // "statusBarItem.warningBackground": test,
            // "statusBarItem.warningForeground": test,
            // "statusBarItem.warningHoverBackground": test,
            // "statusBarItem.warningHoverForeground": test,
            // "testing.coverCountBadgeBackground": test,
            // "testing.coverCountBadgeForeground": test,
            // "testing.coveredBackground": test,
            // "testing.coveredBorder": test,
            // "testing.coveredGutterBackground": test,
            // "testing.iconErrored": test,
            // "testing.iconFailed": test,
            // "testing.iconPassed": test,
            // "testing.iconQueued": test,
            // "testing.iconSkipped": test,
            // "testing.iconUnset": test,
            // "testing.message.error.decorationForeground": test,
            // "testing.message.error.lineBackground": test,
            // "testing.message.info.decorationForeground": test,
            // "testing.message.info.lineBackground": test,
            // "testing.messagePeekBorder": test,
            // "testing.messagePeekHeaderBackground": test,
            // "testing.peekBorder": test,
            // "testing.peekHeaderBackground": test,
            // "testing.runAction": test,
            // "testing.uncoveredBackground": test,
            // "testing.uncoveredBorder": test,
            // "testing.uncoveredBranchBackground": test,
            // "testing.uncoveredGutterBackground": test,
            // "textBlockQuote.background": test,
            // "textBlockQuote.border": test,
            // "textCodeBlock.background": test,
            // "textPreformat.background": test,
            // "textPreformat.foreground": test,
            // "tree.tableColumnsBorder": theme.border,
            // "tree.tableOddRowsBackground": theme.background2,
            // "window.activeBorder": test,
            // "window.inactiveBorder": test,
        },
        // https://macromates.com/manual/en/language_grammars
        // https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide
        // https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide
        // https://tailwindcss.com/docs/customizing-colors
        tokenColors: [
            { scope: ["strong", "markup.bold", "markup.heading"], settings: { fontStyle: "bold" } },
            { scope: ["emphasis, markup.italic"], settings: { fontStyle: "italic" } },
            { scope: ["markup.underline"], settings: { fontStyle: "underline" } },
            { scope: ["markup.strikethrough"], settings: { fontStyle: "strikethrough" } },
            {
                scope: ["markup.inserted"],
                settings: { foreground: theme.tailwind.green[theme.scale] },
            },
            {
                scope: ["markup.deleted"],
                settings: { foreground: theme.tailwind.red[theme.scale] },
            },
            {
                scope: ["markup.changed"],
                settings: { foreground: theme.tailwind.yellow[theme.scale] },
            },
            {
                scope: ["comment", "comment.block", "comment.block.documentation", "comment.line"],
                settings: {
                    foreground: theme.comment,
                },
            },
            {
                scope: [
                    "constant",
                    "constant.character",
                    "constant.character.escape",
                    "constant.other",
                    "constant.regexp",
                    "constant.rgb-value",
                ],
                settings: {
                    foreground: theme.tailwind.yellow[theme.scale],
                },
            },
            {
                scope: [
                    "constant.numeric",
                    "constant.numeric.integer",
                    "constant.numeric.float",
                    "constant.numeric.hex",
                    "constant.numeric.octal",
                ],
                settings: {
                    foreground: theme.tailwind.purple[theme.scale],
                },
            },
            {
                scope: [
                    "entity",
                    "entity.name",
                    "entity.name.class",
                    "entity.name.function",
                    "entity.name.method",
                    "entity.name.section",
                    "entity.name.selector",
                    "entity.name.tag",
                    "entity.name.type",
                    "entity.other",
                    "entity.other.attribute-name",
                    "entity.other.inherited-class",
                    "punctuation.definition.heading",
                ],
                settings: {
                    foreground: theme.tailwind.fuchsia[theme.scale],
                },
            },
            {
                scope: ["invalid", "invalid.deprecated", "invalid.illegal"],
                settings: {
                    foreground: theme.tailwind.red[theme.scale],
                },
            },
            {
                scope: ["keyword", "keyword.control", "keyword.other", "string.json"],
                settings: {
                    foreground: theme.tailwind.rose[theme.scale],
                },
            },
            {
                scope: [
                    "keyword.operator",
                    "keyword.operator.new",
                    "keyword.operator.assignment",
                    "keyword.operator.arithmetic",
                    "keyword.operator.logical",
                ],
                settings: {
                    foreground: theme.tailwind.neutral[theme.scale],
                },
            },
            {
                scope: [
                    "meta",
                    "meta.block",
                    "meta.cast",
                    "meta.class",
                    "meta.function",
                    "meta.function-call",
                    "meta.preprocessor",
                    "meta.return-type",
                    "meta.selector",
                    "meta.tag",
                    "meta.type.annotation",
                    "meta.type",
                ],
                settings: {
                    foreground: theme.tailwind.indigo[theme.scale],
                },
            },
            {
                scope: [
                    "punctuation.definition.string.begin",
                    "punctuation.definition.string.end",
                    "punctuation.separator",
                    "punctuation.separator.continuation",
                    "punctuation.terminator",
                ],
                settings: {
                    foreground: theme.tailwind.neutral[theme.scale],
                },
            },
            {
                scope: ["storage", "storage.modifier", "storage.type"],
                settings: {
                    foreground: theme.tailwind.green[theme.scale],
                },
            },
            {
                scope: [
                    "string",
                    "string.interpolated",
                    "string.other",
                    "string.quoted",
                    "string.quoted.double",
                    "string.quoted.other",
                    "string.quoted.single",
                    "string.quoted.triple",
                    "string.regexp",
                    "string.unquoted",
                ],
                settings: {
                    foreground: theme.tailwind.sky[theme.scale],
                },
            },
            {
                scope: [
                    "support",
                    "support.class",
                    "support.constant",
                    "support.function",
                    "support.other",
                    "support.type",
                    "support.type.property-name",
                    "support.variable",
                ],
                settings: {
                    foreground: theme.tailwind.amber[theme.scale],
                },
            },
            {
                scope: [
                    "variable",
                    "variable.language",
                    "variable.name",
                    "variable.other",
                    "variable.other.readwrite",
                    "variable.parameter",
                ],
                settings: {
                    foreground: theme.tailwind.blue[theme.scale],
                },
            },
        ],
        semanticTokenColors: {
            newOperator: theme.tailwind.purple[theme.scale],
            stringLiteral: theme.tailwind.red[theme.scale],
            customLiteral: theme.tailwind.yellow[theme.scale],
            numberLiteral: theme.tailwind.emerald[theme.scale],
        },
    };
};

const outdir = {
    themes: resolve(import.meta.dirname, "..", "..", "themes"),
    terminal: resolve(import.meta.dirname, "..", "..", "terminal"),
};

const themes = manifest.contributes.themes as ThemeManifest[];

await mkdir(outdir.themes, { recursive: true });

let themePromises: Promise<void>[] = [];

for (const theme of themes) {
    themePromises.push(
        writeFile(
            resolve(import.meta.dirname, "..", "..", theme.path),
            JSON.stringify(generateTheme(makeTheme(theme)), null, 4),
        ),
    );
}

Promise.all(themePromises);

await mkdir(outdir.terminal, { recursive: true });

let terminalPromises: Promise<void>[] = [];
let allTerminalThemes: unknown[] = [];

for (const theme of themes) {
    terminalPromises.push(
        writeFile(
            resolve(
                import.meta.dirname,
                "..",
                "..",
                theme.path.replace("./themes/", "./terminal/"),
            ),
            JSON.stringify(generateTerminal(makeTheme(theme)), null, 4),
        ),
    );

    allTerminalThemes.push(generateTerminal(makeTheme(theme)));
}

await Promise.all(terminalPromises);

writeFile(
    resolve(import.meta.dirname, "..", "..", "terminal", "all.json"),
    JSON.stringify(allTerminalThemes, null, 4),
);
